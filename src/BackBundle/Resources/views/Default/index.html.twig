{% extends 'BackBundle::layout.html.twig' %}

{% block breadcrumb %}
    <li><i class="fa fa-dashboard"></i> Accueil</li>
{% endblock %}

{% block h1 %}Panneau d'Administration <small>ça c'est bon !</small>{% endblock %}

{% block body %}
	<div class="row">
		<div class="col-md-4 col-sm-6">
			<div class="info-box">
				<span class="info-box-icon bg-aqua"><i class="fa fa-map-marker"></i></span>

				<div class="info-box-content">
					<span class="info-box-text">Points d'intérêt</span>
					<span class="info-box-number">{{ poiCount }}</span>
				</div>
				<!-- /.info-box-content -->
			</div>
		</div>
		<div class="col-md-4 col-sm-6">
			<div class="info-box">
				<span class="info-box-icon bg-red"><i class="fa fa-users"></i></span>

				<div class="info-box-content">
					<span class="info-box-text">Utilisateurs uniques</span>
					<span class="info-box-number">{{ appUserCount }}</span>
				</div>
				<!-- /.info-box-content -->
			</div>
		</div>
		<div class="col-md-4 col-sm-6">
			<div class="info-box">
				<span class="info-box-icon bg-green"><i class="fa fa-toggle-on"></i></span>

				<div class="info-box-content">
					<span class="info-box-text">Sessions en cours</span>
					<span class="info-box-number">{{ currentSessionsCount }}</span>
				</div>
				<!-- /.info-box-content -->
			</div>
		</div>
	</div>

	<div class="row">
		<div class="col-sm-12">
			<div class="box">
				<div class="box-header with-border">
					<h3 class="box-title">Nombre de sessions par jour</h3>
				</div>

				<div class="box-body">
					<div class="row">
						<div class="col-sm-12">
							<div class="chart">
								<!-- Sales Chart Canvas -->
								<canvas id="salesChart" style="height: 240px;"></canvas>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>

	<script type="text/javascript">
		$(function() {
			var salesChartCanvas = $("#salesChart").get(0).getContext("2d");
			// This will get the first returned node in the jQuery collection.
			var salesChart = new Chart(salesChartCanvas);

			var salesChartData = {
				// labels: ["January", "February", "March", "April", "May", "June", "July"],
				labels: [{% for entry in sessionsOverDays %}"{{ entry['key_as_string']|date('d/m') }}",{% endfor %}],
				datasets: [
					// {
					// 	label: "Electronics",
					// 	fillColor: "rgb(210, 214, 222)",
					// 	strokeColor: "rgb(210, 214, 222)",
					// 	pointColor: "rgb(210, 214, 222)",
					// 	pointStrokeColor: "#c1c7d1",
					// 	pointHighlightFill: "#fff",
					// 	pointHighlightStroke: "rgb(220,220,220)",
					// 	data: [65, 59, 80, 81, 56, 55, 40]
					// },
					{
						label: "Sessions",
						fillColor: "rgba(60,141,188,0.9)",
						strokeColor: "rgba(60,141,188,0.8)",
						pointColor: "#3b8bba",
						pointStrokeColor: "rgba(60,141,188,1)",
						pointHighlightFill: "#fff",
						pointHighlightStroke: "rgba(60,141,188,1)",
						data: [{% for entry in sessionsOverDays %}"{{ entry['doc_count'] }}",{% endfor %}]
					}
				]
			};

			var salesChartOptions = {
				//Boolean - If we should show the scale at all
				showScale: true,
				//Boolean - Whether grid lines are shown across the chart
				scaleShowGridLines: false,
				//String - Colour of the grid lines
				scaleGridLineColor: "rgba(0,0,0,.05)",
				//Number - Width of the grid lines
				scaleGridLineWidth: 1,
				//Boolean - Whether to show horizontal lines (except X axis)
				scaleShowHorizontalLines: true,
				//Boolean - Whether to show vertical lines (except Y axis)
				scaleShowVerticalLines: true,
				//Boolean - Whether the line is curved between points
				bezierCurve: true,
				//Number - Tension of the bezier curve between points
				bezierCurveTension: 0.3,
				//Boolean - Whether to show a dot for each point
				pointDot: false,
				//Number - Radius of each point dot in pixels
				pointDotRadius: 4,
				//Number - Pixel width of point dot stroke
				pointDotStrokeWidth: 1,
				//Number - amount extra to add to the radius to cater for hit detection outside the drawn point
				pointHitDetectionRadius: 20,
				//Boolean - Whether to show a stroke for datasets
				datasetStroke: true,
				//Number - Pixel width of dataset stroke
				datasetStrokeWidth: 2,
				//Boolean - Whether to fill the dataset with a color
				datasetFill: true,
				//String - A legend template
				{% raw %}
				legendTemplate: "<ul class='<%=name.toLowerCase()%>-legend'><% for (var i=0; i<datasets.length; i++){%><li><span style='background-color:<%=datasets[i].lineColor%>'></span><%=datasets[i].label%></li><%}%></ul>",
				{% endraw %}
				//Boolean - whether to maintain the starting aspect ratio or not when responsive, if set to false, will take up entire container
				maintainAspectRatio: true,
				//Boolean - whether to make the chart responsive to window resizing
				responsive: true
			};

			//Create the line chart
			salesChart.Line(salesChartData, salesChartOptions);
		});
	</script>
{% endblock %}
